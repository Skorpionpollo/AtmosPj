@page "/productos/nuevo"
@page "/productos/editar/ {Id:int}"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioProductos _repositorio;

<h2>@_mensaje</h2>
<EditForm Model="_producto" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="row mb-3">
        <label for="txtNombre" class="col-2 col-form-label">Nombre</label>
        <div class="col-10">
            <InputText id="txtNombre" class="form-control" @bind-Value="_producto.Nombre" />
            <ValidationMessage For="()=>_producto.Nombre" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtDescripcion" class="col-2 col-form-label">Descripción</label>
        <div class="col-10">
            <InputText id="txtDescripcion" class="form-control" @bind-Value="_producto.Descripcion" />
            <ValidationMessage For="()=>_producto.Descripcion" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtPrecio" class="col-2 col-form-label">Precio</label>
        <div class="col-10">
            <InputNumber id="txtPrecio" class="form-control" @bind-Value="_producto.Precio" />
            <ValidationMessage For="()=>_producto.Precio" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtStock" class="col-2 col-form-label">Stock</label>
        <div class="col-10">
            <InputNumber id="txtStock" class="form-control" @bind-Value="_producto.Stock" />
            <ValidationMessage For="()=>_producto.Stock" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <button class="btn btn-danger ms-3" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string _mensaje = "";
    private Producto? _producto = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            _producto = await _repositorio.Get(Id);
            _mensaje = "Modificar Producto";
        }
        else
        {
            _mensaje = "Agregar Nuevo Producto";
        }
    }

    private async void Guardar()
    {
        if (_producto is not null)
        {
            if (Id > 0)
            {
                await _repositorio.Update(Id, _producto);
            }
            else
            {
                await _repositorio.Add(_producto);
            }
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/productos");
    }
}